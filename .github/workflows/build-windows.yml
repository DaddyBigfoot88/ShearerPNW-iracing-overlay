name: build-win
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: .

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 20 (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python (for node-gyp)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Set env vars the RIGHT way for node-gyp (no npm flags)
      - name: Export node-gyp env
        run: |
          Write-Host "pythonLocation = $env:pythonLocation"
          "PYTHON=$env:pythonLocation\python.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          "GYP_MSVS_VERSION=2022"                | Out-File -FilePath $env:GITHUB_ENV -Append
          # npm also respects these:
          "npm_config_python=$env:pythonLocation\python.exe" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Show versions
        run: |
          node -v
          npm -v
          python --version

      - name: Verify package.json exists
        run: |
          if (!(Test-Path package.json)) {
            throw "package.json not found at repo root."
          }
          node -p "require('./package.json').name"
          node -p "Object.keys(require('./package.json').scripts||{})"

      - name: Configure npm
        run: |
          npm config set fund false
          npm config set audit false
          npm config set progress false
          npm config set cache C:\npm\cache
          $env:NPM_CONFIG_LOGLEVEL = "verbose"

      - name: Install deps (no scripts, fallback if needed)
        run: |
          if (Test-Path package-lock.json) {
            npm ci --no-audit --no-fund --loglevel=verbose
          } else {
            npm install --no-audit --no-fund --loglevel=verbose `
              || npm install --no-audit --no-fund --legacy-peer-deps --loglevel=verbose
          }

      - name: Dump npm debug log (on failure)
        if: failure()
        run: |
          $log = Get-ChildItem -Recurse C:\npm\cache\_logs\*-debug-0.log |
            Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($log) {
            "NPM LOG FILE: $($log.FullName)" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
            Get-Content $log.FullName -Raw | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          } else {
            "No npm log found" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
          }

      - name: Build renderer
        run: npm run build:ui

      - name: Package Windows app (portable .exe)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win portable

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iracing-overlay-windows
          path: release/**
