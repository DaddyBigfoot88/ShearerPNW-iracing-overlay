name: build-win
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        # If your package.json is in a subfolder, set it here, e.g. "app"
        working-directory: .

    steps:
      - uses: actions/checkout@v4

      - name: Show repo tree (top 200)
        run: |
          Get-Location
          Get-ChildItem -Recurse -File | Select-Object -First 200 | ForEach-Object { $_.FullName }

      - name: Fail early if package.json is missing
        run: |
          if (!(Test-Path package.json)) { throw "package.json not found at repo root. If it's in a subfolder, set 'defaults.run.working-directory'." }

      - name: Print package.json name/scripts
        run: |
          Get-Content package.json | Select-Object -First 80
          node -p "require('./package.json').name"
          node -p "Object.keys(require('./package.json').scripts||{})"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          # Do NOT set cache without a lockfile

      - name: Setup Python for node-gyp
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Prep node-gyp env (MSVC + Python)
        run: |
          npm config set python "$(Get-Command python).Source"
          npm config set msvs_version 2022
          where.exe python
          where.exe node
          where.exe npm

      - name: Configure npm
        run: |
          npm config set fund false
          npm config set audit false
          npm config set progress false
          npm config set cache C:\npm\cache

      - name: Install dependencies (prefer lockfile)
        run: |
          if (Test-Path package-lock.json) {
            npm ci --no-audit --no-fund --loglevel=verbose
          } else {
            npm install --no-audit --no-fund --loglevel=verbose
          }

      - name: Build renderer
        run: npm run build:ui

      - name: Package Windows app (portable .exe)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx electron-builder --win portable

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iracing-overlay-windows
          path: release/**
